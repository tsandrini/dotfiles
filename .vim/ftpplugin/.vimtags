!_TAG_FILE_SORTED	2	/0=unsorted, 1=sorted, 2=foldcase/
,	/home/tomas/.vim/ftpplugin/python.vim	/^nmap , <Plug>(easymotion-overwin-f2)$/;"	m	language:Vim
<Leader>E	/home/tomas/.vim/ftpplugin/php.vim	/^nmap <Leader>E <Plug>(ale_next_wrap) " Jump quickly through errors$/;"	m	language:Vim
<Leader>e	/home/tomas/.vim/ftpplugin/php.vim	/^nmap <Leader>e <Plug>(ale_previous_wrap) " Jump quickly through errors$/;"	m	language:Vim
<Leader>e	/home/tomas/.vim/ftpplugin/python.vim	/^nmap <Leader>e <Plug>(ale_previous_wrap) " Jump quickly through errors$/;"	m	language:Vim
<Leader>g	/home/tomas/.vim/ftpplugin/php.vim	/^nnoremap <Leader>g :GundoToggle<CR>$/;"	m	language:Vim
<Leader>g	/home/tomas/.vim/ftpplugin/python.vim	/^nnoremap <Leader>g :GundoToggle<CR>$/;"	m	language:Vim
<Leader>m	/home/tomas/.vim/ftpplugin/python.vim	/^noremap <Leader>m :NERDTreeFind<CR>$/;"	m	language:Vim
AutoSyntastic	/home/tomas/.vim/ftpplugin/python.vim	/^augroup AutoSyntastic$/;"	a	language:Vim
E	/home/tomas/.vim/ftpplugin/python.vim	/^nmap <silent>E <Plug>(ale_next_wrap) " Jump quickly through errors$/;"	m	language:Vim
g:ale_sign_error	/home/tomas/.vim/ftpplugin/php.vim	/^let g:ale_sign_error = '✗'$/;"	v	language:Vim
g:ale_sign_error	/home/tomas/.vim/ftpplugin/python.vim	/^let g:ale_sign_error = '✗'$/;"	v	language:Vim
g:ale_sign_warning	/home/tomas/.vim/ftpplugin/php.vim	/^let g:ale_sign_warning = '∆'$/;"	v	language:Vim
g:ale_sign_warning	/home/tomas/.vim/ftpplugin/python.vim	/^let g:ale_sign_warning = '∆'$/;"	v	language:Vim
g:ctrlp_map	/home/tomas/.vim/ftpplugin/python.vim	/^let g:ctrlp_map = '<Leader>p' " Chage default keybinding$/;"	v	language:Vim
g:EasyMotion_do_mapping	/home/tomas/.vim/ftpplugin/python.vim	/^let g:EasyMotion_do_mapping = 0 " Disable default key-mappings$/;"	v	language:Vim
g:EasyMotion_smartcase	/home/tomas/.vim/ftpplugin/python.vim	/^let g:EasyMotion_smartcase = 1 " Turn on case insensitive feature$/;"	v	language:Vim
g:easytags_async	/home/tomas/.vim/ftpplugin/python.vim	/^let g:easytags_async = 1 " Update tags in background and don't interrupt the foreground processe/;"	v	language:Vim
g:easytags_dynamic_files	/home/tomas/.vim/ftpplugin/python.vim	/^let g:easytags_dynamic_files = 1$/;"	v	language:Vim
g:easytags_file	/home/tomas/.vim/ftpplugin/python.vim	/^let g:easytags_file = '.vimtags'$/;"	v	language:Vim
g:indentLine_char	/home/tomas/.vim/ftpplugin/python.vim	/^let g:indentLine_char = '┆'$/;"	v	language:Vim
g:indentLine_color_term	/home/tomas/.vim/ftpplugin/python.vim	/^let g:indentLine_color_term = 239$/;"	v	language:Vim
g:lexima_enable_basic_rules	/home/tomas/.vim/ftpplugin/python.vim	/^let g:lexima_enable_basic_rules = 1$/;"	v	language:Vim
g:lexima_enable_endwise_rules	/home/tomas/.vim/ftpplugin/python.vim	/^let g:lexima_enable_endwise_rules = 1$/;"	v	language:Vim
g:lexima_enable_newline_rules	/home/tomas/.vim/ftpplugin/python.vim	/^let g:lexima_enable_newline_rules = 1$/;"	v	language:Vim
g:lightline	/home/tomas/.vim/ftpplugin/python.vim	/^let g:lightline = {$/;"	v	language:Vim
g:NERDTreeWinSize	/home/tomas/.vim/ftpplugin/python.vim	/^let g:NERDTreeWinSize=35$/;"	v	language:Vim
g:pandoc#command#autoexec_command	/home/tomas/.vim/ftpplugin/dosu.vim	/^let g:pandoc#command#autoexec_command = 'Pandoc pdf -o ..\/..\/..\/.tmp.pdf'$/;"	v	language:Vim
g:pandoc#command#autoexec_on_writes	/home/tomas/.vim/ftpplugin/dosu.vim	/^let g:pandoc#command#autoexec_on_writes = 1$/;"	v	language:Vim
g:vim_json_syntax_conceal	/home/tomas/.vim/ftpplugin/fallback.vim	/^let g:vim_json_syntax_conceal = 0 " Fukin stupid shit i wanna see dem quotes$/;"	v	language:Vim
g:vim_json_syntax_conceal	/home/tomas/.vim/ftpplugin/php.vim	/^let g:vim_json_syntax_conceal = 0 " Fukin stupid shit i wanna see dem quotes$/;"	v	language:Vim
g:ycm_autoclose_preview_window_after_completion	/home/tomas/.vim/ftpplugin/php.vim	/^let g:ycm_autoclose_preview_window_after_completion=1 " auto close notation window$/;"	v	language:Vim
g:ycm_collect_identifiers_from_tags_files	/home/tomas/.vim/ftpplugin/php.vim	/^let g:ycm_collect_identifiers_from_tags_files = 1 " enable completion from tags$/;"	v	language:Vim
LightlineFileencoding	/home/tomas/.vim/ftpplugin/python.vim	/^function! LightlineFileencoding()$/;"	f	language:Vim
LightlineFileformat	/home/tomas/.vim/ftpplugin/python.vim	/^function! LightlineFileformat()$/;"	f	language:Vim
LightlineFilename	/home/tomas/.vim/ftpplugin/python.vim	/^function! LightlineFilename()$/;"	f	language:Vim
LightlineFiletype	/home/tomas/.vim/ftpplugin/python.vim	/^function! LightlineFiletype()$/;"	f	language:Vim
LightlineFugitive	/home/tomas/.vim/ftpplugin/python.vim	/^function! LightlineFugitive()$/;"	f	language:Vim
LightlineMode	/home/tomas/.vim/ftpplugin/python.vim	/^function! LightlineMode()$/;"	f	language:Vim
LightlineModified	/home/tomas/.vim/ftpplugin/python.vim	/^function! LightlineModified()$/;"	f	language:Vim
LightlineReadonly	/home/tomas/.vim/ftpplugin/python.vim	/^function! LightlineReadonly()$/;"	f	language:Vim
m	/home/tomas/.vim/ftpplugin/python.vim	/^noremap m :NERDTreeToggle<CR>$/;"	m	language:Vim
NERDTreeAutoDeleteBuffer	/home/tomas/.vim/ftpplugin/python.vim	/^let NERDTreeAutoDeleteBuffer = 1 " Auto delete buffer$/;"	v	language:Vim
NERDTreeMapActivateNode	/home/tomas/.vim/ftpplugin/python.vim	/^let NERDTreeMapActivateNode='l' " Toggle child nodes with l$/;"	v	language:Vim
NERDTreeMapCloseChildren	/home/tomas/.vim/ftpplugin/python.vim	/^let NERDTreeMapCloseChildren='h' " Close  child nodes with h$/;"	v	language:Vim
NERDTreeMinimalUI	/home/tomas/.vim/ftpplugin/python.vim	/^let NERDTreeMinimalUI=1 " Hides 'Press ? for help'$/;"	v	language:Vim
NERDTreeQuitOnOpen	/home/tomas/.vim/ftpplugin/python.vim	/^let NERDTreeQuitOnOpen=1 " Autoclose NERDTREE on file opening$/;"	v	language:Vim
s:syntastic	/home/tomas/.vim/ftpplugin/python.vim	/^function! s:syntastic()$/;"	f	language:Vim
